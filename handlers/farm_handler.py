from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message

import config.bot_commands as cmd
import keyboards.keyboards as kb
from data import main_data
from facade import farm_facade
from models.user import User

router = Router()


@router.message(F.text.lower().startswith(cmd.FARM_TRIGGER))
async def cmd_farm(message: Message, user: User):
    farm_data, income = await farm_facade.start_farm(user)
    await message.reply(
        "üåæ –§–∞—Ä–º –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!\n"
        f"üí∞ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: <b>{income}</b> {main_data.COIN_NAME}(–∞)\n"
        f"üì¶ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <b>{int(farm_data.balance)}</b> {main_data.COIN_NAME}(–∞)\n"
        f"–°–ª–µ–¥—É—é—â–∏–π —Ñ–∞—Ä–º –≤–æ–∑–º–æ–∂–µ–Ω —á–µ—Ä–µ–∑ {main_data.FARM_COOLDOWN.total_seconds() // 3600} —á–∞—Å–∞"
        , parse_mode=ParseMode.HTML)


@router.message(F.text.lower().startswith(cmd.BALANCE_TRIGGER))
async def cmd_balance(message: Message, user: User):
    farm_data = await user.get_farm_data()

    await message.reply(
        "üíº –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:\n"
        f"üí∞ <b>{int(farm_data.balance)}</b> {main_data.COIN_NAME}(–∞)"
        , parse_mode=ParseMode.HTML
        , reply_markup=kb.get_actions_for_wallet_button(user.tg_id))
